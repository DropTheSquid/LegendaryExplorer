<me3Explorer:NotifyPropertyChangedWindowBase x:Class="ME3Explorer.TextureStudio.TextureStudioUI"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ME3Explorer.TextureStudio"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
        xmlns:sharedUi="clr-namespace:ME3Explorer.SharedUI"
        xmlns:ei="http://schemas.microsoft.com/expression/2010/interactions"
        xmlns:converters="clr-namespace:ME3Explorer.SharedUI.Converters"
        xmlns:me3Explorer="clr-namespace:ME3Explorer"
        mc:Ignorable="d"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="Texture Studio" Height="450" Width="800">
    <Window.Resources>
        <converters:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
        <converters:BoolToVisibilityConverter x:Key="BoolToVisibilityConverter"/>
        <converters:GameToVisibilityConverter x:Key="GameToVisibilityConverter"/>
        <BitmapImage x:Key="packageicon" UriSource="pack://application:,,,/PackageEditor/EntryIcons/icon_package.png"/>
        <BitmapImage x:Key="textureicon" UriSource="pack://application:,,,/PackageEditor/EntryIcons/icon_texture2d.png"/>
    </Window.Resources>
    <xctk:BusyIndicator IsBusy="{Binding IsBusy}">
        <xctk:BusyIndicator.BusyContentTemplate>
            <DataTemplate>
                <StackPanel DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Width="300">
                    <TextBlock Text="{Binding BusyHeader}" FontWeight="Bold" TextAlignment="Center"/>
                    <TextBlock Text="{Binding BusyText}"/>
                    <ProgressBar Value="{Binding BusyProgressValue}" Maximum="{Binding BusyProgressMaximum}" IsIndeterminate="{Binding BusyProgressIndeterminate}"  Margin="0,5,0,0" Height="15" />
                    <Button Content="Cancel" HorizontalAlignment="center" Margin="0,5,0,0" Padding="3"  Command="{Binding BusyCancelCommand}" />
                </StackPanel>
            </DataTemplate>
        </xctk:BusyIndicator.BusyContentTemplate>
        <xctk:BusyIndicator.ProgressBarStyle>
            <Style TargetType="ProgressBar" >
                <Setter Property="Visibility" Value="Collapsed"/>
            </Style>
        </xctk:BusyIndicator.ProgressBarStyle>
        <DockPanel>
            <Menu DockPanel.Dock="Top">
                <MenuItem Header="File" Padding="4">
                    <MenuItem Header="Load vanilla texture map" Click="LTM"/>
                    <MenuItem Header="Test SFAR TEXTURE READ" Click="TSTR"/>
                </MenuItem>
                <MenuItem Header="Operations">
                    <MenuItem Header="Remove all empty mips" Command="{Binding RemoveAllEmptyMipsCommand}"/>
                    <MenuItem Header="ME1: Update master texture pointers" Command="{Binding ME1UpdateMasterPointersCommand}"/>
                    <MenuItem Header="ME1: Create a new master texture package" Command="{Binding ME1CreateNewMasterPackageCommand}"/>

                </MenuItem>
            </Menu>
            <StatusBar DockPanel.Dock="Bottom">
                <StatusBarItem Padding="2" VerticalContentAlignment="Center" Visibility="{Binding CurrentStudioGame, Converter={StaticResource GameToVisibilityConverter}, ConverterParameter='Not_Unknown'}">
                    <Border BorderBrush="Gray" BorderThickness="2,2,2,2" CornerRadius="3,3,3,3" VerticalAlignment="Center">
                        <TextBlock Text="{Binding CurrentStudioGame}" FontSize="11" Foreground="White" Padding="4,3,4,3" FontFamily="Consolas" VerticalAlignment="Center"/>
                    </Border>
                </StatusBarItem>
                <StatusBarItem>
                    <TextBlock Text="{Binding StatusText}"/>
                </StatusBarItem>
            </StatusBar>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition MinWidth="350" MaxWidth="600"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition MinWidth="100" MaxWidth="700"/>
                    <ColumnDefinition Width="5"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="15"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <TextBlock Text="In-memory unique textures" Grid.Column="0" FontWeight="Bold" TextAlignment="Center" Background="{x:Static Brushes.Bisque}"/>
                <TextBlock Text="Package instances" Grid.Column="2" FontWeight="Bold" TextAlignment="Center" Background="{x:Static Brushes.Bisque}"/>
                <TextBlock Text="Texture Viewer for instance" Grid.Column="5" FontWeight="Bold" TextAlignment="Center" Background="{x:Static Brushes.Bisque}"/>

                <Button Content="Select folder"
                        Visibility="{Binding SelectedFolder, Converter={StaticResource NullVisibilityConverter}, ConverterParameter='Reversed'}"
                        Command="{Binding ScanFolderCommand}"/>
                <TreeView x:Name="LeftSide_TreeView" 
                          Visibility="{Binding SelectedFolder, Converter={StaticResource NullVisibilityConverter}}"
                          Grid.Column="0" 
                          Grid.Row="1"
                          FontFamily="Consolas"
                          SelectedItemChanged="SelectedTreeNodeChanged"
                          ItemsSource="{Binding AllTreeViewNodes}" 
                          FocusManager.IsFocusScope="True" 
                          VirtualizingStackPanel.IsVirtualizing="True" 
                          VirtualizingStackPanel.VirtualizationMode="Recycling">
                    <TreeView.Resources>
                        <HierarchicalDataTemplate DataType="{x:Type local:TextureMapMemoryEntryWPF}" 
                                                  ItemsSource="{Binding Children}">
                            <Border Background="Transparent">
                                <DockPanel>
                                    <TextBlock DockPanel.Dock="Bottom" Text="{Binding Instances.BindableCount, StringFormat='{}{0} instances'}" 
                                               FontSize="10"
                                               TextWrapping="Wrap" VerticalAlignment="Center" 
                                               Visibility="{Binding IsPackage, Converter={StaticResource BoolToVisibilityConverter}, ConverterParameter='Not'}" />
                                    <StackPanel Orientation="Horizontal">
                                        <Image Width="16" Height="16" Margin="0,0,3,0">
                                            <Image.Style>
                                                <Style TargetType="{x:Type Image}">
                                                    <Setter Property="Source" Value="{StaticResource textureicon}" />
                                                    <Style.Triggers>
                                                        <DataTrigger Value="True" Binding="{Binding IsPackage}">
                                                            <Setter Property="Source" Value="{StaticResource packageicon}"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Image.Style>
                                        </Image>
                                        <TextBlock  Text="{Binding ObjectName}" VerticalAlignment="Center">
                                            <TextBlock.Style>
                                                <Style TargetType="{x:Type TextBlock}">
                                                    <Style.Triggers>
                                                        <DataTrigger Value="{x:Null}" Binding="{Binding Parent}">
                                                            <Setter Property="FontWeight" Value="Bold"/>
                                                            <Setter Property="FontSize" Value="14"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </TextBlock.Style>
                                        </TextBlock>
                                        <StackPanel.Style>
                                            <Style TargetType="{x:Type StackPanel}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding HasUnmatchedCRCs}" Value="true">
                                                        <Setter Property="Background" Value="OrangeRed"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </StackPanel.Style>
                                    </StackPanel>
                                </DockPanel>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="PreviewMouseRightButtonDown">
                                        <ei:ChangePropertyAction PropertyName="IsSelected" Value="true" TargetObject="{Binding}"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </Border>
                        </HierarchicalDataTemplate>
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}"
                      Color="LightBlue" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.HighlightTextBrushKey}"
                      Color="Black" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}"
                      Color="LightBlue" />
                        <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightTextBrushKey}"
                      Color="Black" />
                    </TreeView.Resources>
                    <TreeView.ItemContainerStyle>
                        <Style TargetType="{x:Type TreeViewItem}">
                            <!-- Items in the ItemsSource need to have these properties for the binding to work -->
                            <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                            <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" />
                        </Style>
                    </TreeView.ItemContainerStyle>
                    <!--<i:Interaction.Behaviors>
                        <sharedUi:NodeTreeSelectionBehavior SelectedItem="{Binding SelectedItem}" />
                    </i:Interaction.Behaviors>-->
                </TreeView>

                <GridSplitter Width="5"  Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Center" Grid.RowSpan="2"/>
                <DockPanel Grid.Column="2" Grid.Row="1">
                    <DockPanel Dock="Bottom">
                        
                    </DockPanel>
                <ListBox Grid.Column="2" ItemsSource="{Binding SelectedItem.Instances}" SelectedItem="{Binding SelectedInstance}">
                    <ListBox.Resources>
                        <DataTemplate DataType="{x:Type local:TextureMapPackageEntry}">
                            <DockPanel>
                                <TextBlock DockPanel.Dock="Bottom" FontSize="10">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}Located in {0}">
                                            <Binding Path="TFCName" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock DockPanel.Dock="Bottom" FontSize="10">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}Export {0}, CRC 0x{1}, {2} mips, {3} empty mips">
                                            <Binding Path="UIndex" />
                                            <Binding Path="CRC" />
                                            <Binding Path="NumMips" />
                                            <Binding Path="NumEmptyMips" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                                <TextBlock Text="{Binding RelativePackagePath}"/>
                            </DockPanel>
                        </DataTemplate>
                    </ListBox.Resources>
                </ListBox>
                </DockPanel>

                <GridSplitter Grid.Column="3" Grid.RowSpan="2" Width="5"/>
                <me3Explorer:TextureViewerExportLoader x:Name="TextureViewer_ExportLoader"  Grid.Column="4" Grid.Row="1"/>

            </Grid>
        </DockPanel>
    </xctk:BusyIndicator>
</me3Explorer:NotifyPropertyChangedWindowBase>
