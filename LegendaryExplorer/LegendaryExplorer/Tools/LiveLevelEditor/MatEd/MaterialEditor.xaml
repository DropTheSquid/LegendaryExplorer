<bases:TrackingNotifyPropertyChangedWindowBase x:Class="LegendaryExplorer.Tools.LiveLevelEditor.MatEd.MaterialEditor"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:LegendaryExplorer.Tools.LiveLevelEditor"
        xmlns:bases="clr-namespace:LegendaryExplorer.SharedUI.Bases"
        xmlns:dd="urn:gong-wpf-dragdrop"
        xmlns:matEd="clr-namespace:LegendaryExplorer.Tools.LiveLevelEditor.MatEd"
        xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
        mc:Ignorable="d"
        Loaded="MaterialEditor_OnLoaded"
        AllowDrop="True"
        DataContext="{Binding RelativeSource={RelativeSource Self}}"
        Title="Material Editor" Height="450" Width="800"
        dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}">
    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter"/>
        <DataTemplate DataType="{x:Type matEd:MatEdTexture}" >
            <DockPanel>
                <Image DockPanel.Dock="Left" Width="64" Height="64" Source="{Binding LoadedBitMap}"/>
                <StackPanel>
                    <TextBlock Text="{Binding DisplayString}" Margin="5,0"/>
                </StackPanel>
            </DockPanel>
        </DataTemplate>
        <!-- Parameters -->
        <DataTemplate DataType="{x:Type matEd:TextureParameterMatEd}">
            <DockPanel>
                <Image DockPanel.Dock="Left" Width="64" Height="64" Source="{Binding LoadedBitMap}"/>
                <StackPanel>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Text="{Binding ParameterName}" 
                                   FontWeight="Bold"
                                   Margin="5,0,0,0"/>
                        <TextBlock Text="Default expression value" Margin="5,0" 
                                   FontStyle="Italic"
                                   Visibility="{Binding IsDefaultParameter, FallbackValue=Collapsed, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                    </StackPanel>
                    <TextBlock Text="{Binding DisplayString}" Margin="5,0"/>
                    <Button Content="Change" HorizontalAlignment="Left" Margin="5,0" Padding="4,3" Command="{Binding ReplaceTextureCommand}"/>
                </StackPanel>
            </DockPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type matEd:ScalarParameter}">
            <StackPanel Orientation="Horizontal" Margin="0,2">
                <TextBlock Text="{Binding ParameterName}" FontWeight="Bold"  MinWidth="218"/>
                <xctk:SingleUpDown Value="{Binding ParameterValue}" ValueChanged="Scalar_Changed" Width="100"/>
                <TextBlock Text="Default expression value" Margin="5,0" 
                           FontStyle="Italic"
                           VerticalAlignment="Center"
                           Visibility="{Binding IsDefaultParameter, FallbackValue=Collapsed, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>
        </DataTemplate>
        <DataTemplate DataType="{x:Type matEd:VectorParameter}">
            <StackPanel Orientation="Horizontal" Margin="0,2">
                <TextBlock Text="{Binding ParameterName}" MinWidth="200" FontWeight="Bold"/>
                <TextBlock Text="R:" Margin="5,0,2,0" VerticalAlignment="Center" FontWeight="Bold"/>
                <xctk:SingleUpDown Value="{Binding ParameterValue.W}" ValueChanged="VectorR_Changed" Width="100"/>
                <TextBlock Text="G:" Margin="5,0,2,0" VerticalAlignment="Center" FontWeight="Bold"/>
                <xctk:SingleUpDown Value="{Binding ParameterValue.X}" ValueChanged="VectorG_Changed" Width="100"/>
                <TextBlock Text="B:" Margin="5,0,2,0" VerticalAlignment="Center" FontWeight="Bold"/>
                <xctk:SingleUpDown Value="{Binding ParameterValue.Y}" ValueChanged="VectorB_Changed" Width="100"/>
                <TextBlock Text="A:" Margin="5,0,2,0" VerticalAlignment="Center" FontWeight="Bold"/>
                <xctk:SingleUpDown Value="{Binding ParameterValue.Z}" ValueChanged="VectorA_Changed" Width="100"/>
                <TextBlock Text="Default expression value" Margin="5,0" 
                           FontStyle="Italic"
                           VerticalAlignment="Center"
                           Visibility="{Binding IsDefaultParameter, FallbackValue=Collapsed, Converter={StaticResource BooleanToVisibilityConverter}}"/>
            </StackPanel>
        </DataTemplate>
    </Window.Resources>
    <xctk:BusyIndicator BusyContent="{Binding BusyText}" IsBusy="{Binding IsBusy}">
        <DockPanel Margin="3">
            <GroupBox DockPanel.Dock="Top" Header="Info">
                <DockPanel>
                    <TextBlock Text="{Binding MatInfo.MaterialExport.InstancedFullPath, StringFormat='Current loaded material: {0}'}">

                    </TextBlock>
                    <!--<Button Content="Load different material"/>-->
                </DockPanel>
            </GroupBox>
            <GroupBox Header="Operations" DockPanel.Dock="Bottom">
                <DockPanel>
                    <CheckBox DockPanel.Dock ="Left" IsChecked="{Binding AutoUpdate}" Content="Auto preview on changes" VerticalAlignment="Center" Margin="5,0"/>
                    <Button DockPanel.Dock="Right" Content="Preview on Mesh" HorizontalAlignment="Right" Padding="20,5" Command="{Binding PreviewOnMeshCommand}"/>
                    <Button Content="Save material package" HorizontalAlignment="Right" Padding="10,5" Margin="5,0"  Command="{Binding SaveMaterialPackageCommand}"/>
                </DockPanel>
            </GroupBox>
            <ScrollViewer>
                <StackPanel>
                    <GroupBox DockPanel.Dock="Top" Header="{Binding BaseMaterial.InstancedFullPath, StringFormat='Base Material Uniform Textures ({0})'}" Margin="2,0">
                        <ItemsControl ItemsSource="{Binding MatInfo.UniformTextures}"/>
                    </GroupBox>
                    <GroupBox Header="Instance Material Expressions" Margin="2,0">
                        <ItemsControl ItemsSource="{Binding MatInfo.Expressions}">
                        </ItemsControl>
                    </GroupBox>
                </StackPanel>
            </ScrollViewer>
        </DockPanel>
    </xctk:BusyIndicator>
</bases:TrackingNotifyPropertyChangedWindowBase>
