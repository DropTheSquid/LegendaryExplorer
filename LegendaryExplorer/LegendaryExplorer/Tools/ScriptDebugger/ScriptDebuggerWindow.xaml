<bases:TrackingNotifyPropertyChangedWindowBase x:Class="LegendaryExplorer.Tools.ScriptDebugger.ScriptDebuggerWindow"
                                         xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                                         xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                                         xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                                         xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                                         xmlns:local="clr-namespace:LegendaryExplorer.Tools.ScriptDebugger"
                                         xmlns:bases="clr-namespace:LegendaryExplorer.SharedUI.Bases"
                                         xmlns:controls="clr-namespace:LegendaryExplorer.SharedUI.Controls"
                                         xmlns:xctk="http://schemas.xceed.com/wpf/xaml/toolkit"
                                         xmlns:sharedUi="clr-namespace:LegendaryExplorer.SharedUI"
                                         xmlns:converters="clr-namespace:LegendaryExplorer.SharedUI.Converters"
                                         xmlns:fa5="http://schemas.fontawesome.com/icons/"
                                         xmlns:unreal="clr-namespace:LegendaryExplorerCore.Unreal;assembly=LegendaryExplorerCore"
                                         mc:Ignorable="d"
                                         d:DataContext="{Binding RelativeSource={RelativeSource Self}}"
                                         Title="Script Debugger" Closing="ScriptDebuggerWindow_OnClosing">

    <Window.Resources>
        <converters:InverseBooleanConverter x:Key="InverseBooleanConverter"/>
    </Window.Resources>
    <xctk:BusyIndicator IsBusy="{Binding Path=IsBusy}">
        <Grid>
            <Grid Width="523" IsEnabled="{Binding IsAttached, Converter={StaticResource InverseBooleanConverter}}" sharedUi:Bindings.VisibilityToEnabled="True">
                <Border BorderBrush="LightSlateGray" BorderThickness="0.65">
                    <StackPanel MinWidth="200" Margin="8">
                        <TextBlock Text="Welcome to Script Debugger" Margin="0,5,0,0" />
                        <TextBlock Text="Requirements:" Margin="0,5,0,0" />
                        <StackPanel>
                            <controls:Requirement x:Name="GameInstalledReq"
                                                           FullfilledText="Mass Effect (Legendary Edition) is installed" Margin="0,5,0,5"
                                                           UnFullfilledText="Can't find Mass Effect (Legendary Edition) installation!"
                                                           ButtonText="Set LE1 path"
                                                           Command="{Binding GameInstalledRequirementCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ScriptDebuggerWindow}}}" />
                            <controls:Requirement x:Name="AsiLoaderInstalledReq"
                                                           FullfilledText="ASI loader is installed"
                                                           Margin="0,5,0,5"
                                                           UnFullfilledText="ASI loader is not installed!"
                                                           ButtonText="Get ASI loader"
                                                           Command="{Binding ASILoaderInstalledRequirementCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ScriptDebuggerWindow}}}" />
                            <controls:Requirement x:Name="DebuggerAsiInstalledReq"
                                                              FullfilledText="Debugger ASI is installed"
                                                              Margin="0,5,0,5"
                                                              UnFullfilledText="Debugger ASI is not installed or is out of date!"
                                                              ButtonText="Get Debugger ASI"
                                                              Command="{Binding DebuggerASIInstalledRequirementCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ScriptDebuggerWindow}}}" />
                            <TextBlock Text="Once the above requirements are fulfilled, start the game, and press the button below."
                                                   Margin="15,5,15,5" TextWrapping="Wrap"/>
                        </StackPanel>
                        <Button Name="AttachToGameButton" Content="Attach Debugger"
                                            Margin="20,10,20,0"
                                            Command="{Binding AttachDebuggerCommand, RelativeSource={RelativeSource AncestorType={x:Type local:ScriptDebuggerWindow}}}" />
                    </StackPanel>
                </Border>
            </Grid>
            <DockPanel IsEnabled="{Binding IsAttached}" sharedUi:Bindings.VisibilityToEnabled="True">
                <ToolBar DockPanel.Dock="Top">
                    <Button FontWeight="Bold" Command="{Binding DetachDebuggerCommand}">Detach</Button>
                    <Separator/>
                    <Separator/>
                    <Button ToolTip="Break All" Command="{Binding BreakAllCommand}">
                        <Button.Content>
                            <fa5:FontAwesome Icon="Solid_Pause" Height="12" />
                        </Button.Content>
                    </Button>
                    <Button ToolTip="Resume" Command="{Binding ResumeCommand}">
                        <Button.Content>
                            <fa5:FontAwesome Icon="Solid_Play" Height="12" />
                        </Button.Content>
                    </Button>
                    <Separator/>
                    <Button ToolTip="Step Into" Command="{Binding StepIntoCommand}">
                        <Button.Content>
                            <fa5:FontAwesome Icon="Solid_LevelDownAlt" Height="12" />
                        </Button.Content>
                    </Button>
                    <Button ToolTip="Step Over" Command="{Binding StepOverCommand}">
                        <Button.Content>
                            <fa5:FontAwesome Icon="Solid_LongArrowAltRight" Height="12" />
                        </Button.Content>
                    </Button>
                    <Button ToolTip="Step Out" Command="{Binding StepOutCommand}">
                        <Button.Content>
                            <fa5:FontAwesome Icon="Solid_LevelUpAlt" Height="12" />
                        </Button.Content>
                    </Button>
                </ToolBar>
                <TextBlock x:Name="infoBlock" Background="White" FontSize="14" Height="100"  DockPanel.Dock="Top"/>
                <TabControl DockPanel.Dock="Bottom" TabStripPlacement="Bottom">
                    <TabItem Header="Locals">
                        <controls:StretchingTreeView controls:StretchingTreeViewItem.Expanded="TreeViewItem_OnExpanded" ItemsSource="{Binding Locals}"
                                                     HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" >
                            <controls:StretchingTreeView.Resources>
                                <DataTemplate DataType="{x:Type local:IntPropertyValue}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <xctk:IntegerUpDown Grid.Column="1" Value="{Binding Value}"/>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type local:StringRefPropertyValue}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <xctk:IntegerUpDown Grid.Column="1" Value="{Binding Value}"/>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type local:FloatPropertyValue}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <xctk:SingleUpDown Grid.Column="1" Value="{Binding Value}"/>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type local:BytePropertyValue}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <xctk:ByteUpDown Grid.Column="1" Value="{Binding Value}"/>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type local:BoolPropertyValue}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <CheckBox Grid.Column="1" IsChecked="{Binding Value}"/>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type local:StrPropertyValue}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <TextBox Grid.Column="1" Text="{Binding Value}" PreviewTextInput="StringValue_OnPreviewTextInput"/>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type local:NamePropertyValue}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Value, Mode=OneTime}"/>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type local:DelegatePropertyValue}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Value, Mode=OneTime}"/>
                                    </Grid>
                                </DataTemplate>
                                <DataTemplate DataType="{x:Type local:EnumPropertyValue}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <ComboBox Grid.Column="1" ItemsSource="{Binding EnumValues}" SelectedItem="{Binding Value}">
                                            <ComboBox.Resources>
                                                <DataTemplate DataType="{x:Type unreal:NameReference}">
                                                    <StackPanel Orientation="Horizontal">
                                                        <TextBlock Text="{Binding Path=Instanced}" Margin="5,0,0,0"/>
                                                    </StackPanel>
                                                </DataTemplate>
                                            </ComboBox.Resources>
                                        </ComboBox>
                                    </Grid>
                                </DataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type local:ObjectPropertyValue}" ItemsSource="{Binding Properties}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Value, Mode=OneTime}"/>
                                    </Grid>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type local:StructPropertyValue}" ItemsSource="{Binding Properties}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Value, Mode=OneTime}"/>
                                    </Grid>
                                </HierarchicalDataTemplate>
                                <HierarchicalDataTemplate DataType="{x:Type local:ArrayPropertyValue}" ItemsSource="{Binding Elements}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                        <TextBlock Grid.Column="1" Text="{Binding Value, Mode=OneTime}"/>
                                    </Grid>
                                </HierarchicalDataTemplate>
                                <DataTemplate DataType="{x:Type local:LoadingPropertyValue}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="200"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <TextBlock Text="{Binding PropName, Mode=OneTime}"/>
                                    </Grid>
                                </DataTemplate>
                            </controls:StretchingTreeView.Resources>
                        </controls:StretchingTreeView>
                    </TabItem>
                </TabControl>
            </DockPanel>
        </Grid>
        <xctk:BusyIndicator.BusyContentTemplate>
            <DataTemplate>
                <StackPanel DataContext="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                    <!--<TextBlock Text="{Binding BusyHeader}" FontWeight="Bold" TextAlignment="Center"/>-->
                    <TextBlock Text="{Binding BusyText}"/>
                    <ProgressBar IsIndeterminate="True"  Margin="0,5,0,0" Height="15" />
                    <Button Content="Cancel" HorizontalAlignment="center" Margin="0,5,0,0" Padding="3" Command="{Binding CancelBusyCommand}" sharedUi:Bindings.VisibilityToEnabled="True"/>
                </StackPanel>
            </DataTemplate>
        </xctk:BusyIndicator.BusyContentTemplate>
        <xctk:BusyIndicator.ProgressBarStyle>
            <Style TargetType="ProgressBar" >
                <Setter Property="Visibility" Value="Collapsed"/>
            </Style>
        </xctk:BusyIndicator.ProgressBarStyle>
    </xctk:BusyIndicator>
</bases:TrackingNotifyPropertyChangedWindowBase>
